{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/fazna/cleanit/src/components/Map.tsx\";\n\nimport React, { useRef, useEffect } from 'react';\n\nvar Map = function Map(_ref) {\n  var mapCenter = _ref.mapCenter,\n      locations = _ref.locations;\n  var mapEle = useRef(null);\n  var map = useRef();\n  useEffect(function () {\n    map.current = new google.maps.Map(mapEle.current, {\n      center: {\n        lat: mapCenter.lat,\n        lng: mapCenter.lng\n      },\n      zoom: 16\n    });\n    addMarkers();\n    google.maps.event.addListenerOnce(map.current, 'idle', function () {\n      if (mapEle.current) {\n        mapEle.current.classList.add('show-map');\n      }\n    });\n\n    function addMarkers() {\n      locations.forEach(function (markerData) {\n        var infoWindow = new google.maps.InfoWindow({\n          content: \"<h5>\".concat(markerData.name, \"</h5>\")\n        });\n        var marker = new google.maps.Marker({\n          position: new google.maps.LatLng(markerData.lat, markerData.lng),\n          map: map.current,\n          title: markerData.name\n        });\n        marker.addListener('click', function () {\n          infoWindow.open(map.current, marker);\n        });\n      });\n    }\n  }, [mapCenter, locations]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapEle,\n    className: \"map-canvas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/fazna/cleanit/src/components/Map.tsx"],"names":["React","useRef","useEffect","Map","mapCenter","locations","mapEle","map","current","google","maps","center","lat","lng","zoom","addMarkers","event","addListenerOnce","classList","add","forEach","markerData","infoWindow","InfoWindow","content","name","marker","Marker","position","LatLng","title","addListener","open"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAQA,IAAMC,GAAuB,GAAG,SAA1BA,GAA0B,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC5D,MAAMC,MAAM,GAAGL,MAAM,CAAiB,IAAjB,CAArB;AACA,MAAMM,GAAG,GAAGN,MAAM,EAAlB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AAEdK,IAAAA,GAAG,CAACC,OAAJ,GAAc,IAAIC,MAAM,CAACC,IAAP,CAAYP,GAAhB,CAAoBG,MAAM,CAACE,OAA3B,EAAoC;AAChDG,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAER,SAAS,CAACQ,GADT;AAENC,QAAAA,GAAG,EAAET,SAAS,CAACS;AAFT,OADwC;AAKhDC,MAAAA,IAAI,EAAE;AAL0C,KAApC,CAAd;AAQAC,IAAAA,UAAU;AAEVN,IAAAA,MAAM,CAACC,IAAP,CAAYM,KAAZ,CAAkBC,eAAlB,CAAkCV,GAAG,CAACC,OAAtC,EAA+C,MAA/C,EAAuD,YAAM;AAC3D,UAAIF,MAAM,CAACE,OAAX,EAAoB;AAClBF,QAAAA,MAAM,CAACE,OAAP,CAAeU,SAAf,CAAyBC,GAAzB,CAA6B,UAA7B;AACD;AACF,KAJD;;AAMA,aAASJ,UAAT,GAAsB;AACpBV,MAAAA,SAAS,CAACe,OAAV,CAAkB,UAACC,UAAD,EAAgB;AAChC,YAAIC,UAAU,GAAG,IAAIb,MAAM,CAACC,IAAP,CAAYa,UAAhB,CAA2B;AAC1CC,UAAAA,OAAO,gBAASH,UAAU,CAACI,IAApB;AADmC,SAA3B,CAAjB;AAIA,YAAIC,MAAM,GAAG,IAAIjB,MAAM,CAACC,IAAP,CAAYiB,MAAhB,CAAuB;AAClCC,UAAAA,QAAQ,EAAE,IAAInB,MAAM,CAACC,IAAP,CAAYmB,MAAhB,CAAuBR,UAAU,CAACT,GAAlC,EAAuCS,UAAU,CAACR,GAAlD,CADwB;AAElCN,UAAAA,GAAG,EAAEA,GAAG,CAACC,OAFyB;AAGlCsB,UAAAA,KAAK,EAAET,UAAU,CAACI;AAHgB,SAAvB,CAAb;AAMAC,QAAAA,MAAM,CAACK,WAAP,CAAmB,OAAnB,EAA4B,YAAM;AAChCT,UAAAA,UAAU,CAACU,IAAX,CAAgBzB,GAAG,CAACC,OAApB,EAA8BkB,MAA9B;AACD,SAFD;AAGD,OAdD;AAeD;AAEF,GApCQ,EAoCN,CAACtB,SAAD,EAAYC,SAAZ,CApCM,CAAT;AAsCA,sBACE;AAAK,IAAA,GAAG,EAAEC,MAAV;AAAkB,IAAA,SAAS,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CA7CD;;AA+CA,eAAeH,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Location } from '../models/Location';\n\ninterface MapProps {\n  locations: Location[]\n  mapCenter: Location\n}\n\nconst Map: React.FC<MapProps> = ({ mapCenter, locations }) => {\n  const mapEle = useRef<HTMLDivElement>(null);\n  const map = useRef<google.maps.Map>();\n\n  useEffect(() => {\n\n    map.current = new google.maps.Map(mapEle.current, {\n      center: {\n        lat: mapCenter.lat,\n        lng: mapCenter.lng\n      },\n      zoom: 16\n    });\n\n    addMarkers();\n\n    google.maps.event.addListenerOnce(map.current, 'idle', () => {\n      if (mapEle.current) {\n        mapEle.current.classList.add('show-map');\n      }\n    });\n\n    function addMarkers() {\n      locations.forEach((markerData) => {\n        let infoWindow = new google.maps.InfoWindow({\n          content: `<h5>${markerData.name}</h5>`\n        });\n  \n        let marker = new google.maps.Marker({\n          position: new google.maps.LatLng(markerData.lat, markerData.lng),\n          map: map.current!,\n          title: markerData.name\n        });\n  \n        marker.addListener('click', () => {\n          infoWindow.open(map.current!, marker);\n        });\n      });\n    }\n\n  }, [mapCenter, locations]);\n\n  return (\n    <div ref={mapEle} className=\"map-canvas\"></div>\n  );\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}