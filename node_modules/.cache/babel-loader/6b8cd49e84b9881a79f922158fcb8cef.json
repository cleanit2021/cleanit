{"ast":null,"code":"import _slicedToArray from \"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fazna/cleanit/src/pages/Dashboard.tsx\";\n\nimport React, { useState, useRef } from 'react';\nimport { dashboard } from './dashboardData';\nimport { IonToolbar, IonContent, IonPage, IonButtons, IonTitle, IonMenuButton, IonSegment, IonSegmentButton, IonButton, IonIcon, IonSearchbar, IonRefresher, IonRefresherContent, IonToast, IonModal, IonHeader, getConfig, IonCard, IonCardHeader, IonGrid, IonRow, IonCol, IonCardContent } from '@ionic/react';\nimport { search } from 'ionicons/icons';\nimport SessionList from '../components/SessionList';\nimport SessionListFilter from '../components/SessionListFilter';\nimport './SchedulePage.scss';\nimport './Dashboard.scss';\nimport ShareSocialFab from '../components/ShareSocialFab';\nimport * as selectors from '../data/selectors';\nimport { connect } from '../data/connect';\nimport { setSearchText } from '../data/sessions/sessions.actions';\nimport { Card } from './Card';\nimport { maindata } from './maindata';\nimport { MainDashboard } from './MainDashboard';\n\nvar SchedulePage = function SchedulePage(_ref) {\n  var favoritesSchedule = _ref.favoritesSchedule,\n      schedule = _ref.schedule,\n      setSearchText = _ref.setSearchText,\n      mode = _ref.mode;\n\n  var _useState = useState('all'),\n      _useState2 = _slicedToArray(_useState, 2),\n      segment = _useState2[0],\n      setSegment = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSearchbar = _useState4[0],\n      setShowSearchbar = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showFilterModal = _useState6[0],\n      setShowFilterModal = _useState6[1];\n\n  var ionRefresherRef = useRef(null);\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showCompleteToast = _useState8[0],\n      setShowCompleteToast = _useState8[1];\n\n  var pageRef = useRef(null);\n  var ios = mode === 'ios';\n\n  var doRefresh = function doRefresh() {\n    setTimeout(function () {\n      ionRefresherRef.current.complete();\n      setShowCompleteToast(true);\n    }, 2500);\n  };\n\n  var cardstyle = {\n    height: '50px'\n  };\n  return /*#__PURE__*/React.createElement(IonPage, {\n    ref: pageRef,\n    id: \"schedule-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    translucent: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, !showSearchbar && /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonMenuButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })), ios && /*#__PURE__*/React.createElement(IonSegment, {\n    value: segment,\n    onIonChange: function onIonChange(e) {\n      return setSegment(e.detail.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"all\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"favorites\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Favorites\")), !ios && !showSearchbar && /*#__PURE__*/React.createElement(IonTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Dashboard\"), showSearchbar && /*#__PURE__*/React.createElement(IonSearchbar, {\n    showCancelButton: \"always\",\n    placeholder: \"Search\",\n    onIonChange: function onIonChange(e) {\n      return setSearchText(e.detail.value);\n    },\n    onIonCancel: function onIonCancel() {\n      return setShowSearchbar(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, !ios && !showSearchbar && /*#__PURE__*/React.createElement(IonButton, {\n    onClick: function onClick() {\n      return setShowSearchbar(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Schedule\")), /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonSearchbar, {\n    placeholder: \"Search\",\n    onIonChange: function onIonChange(e) {\n      return setSearchText(e.detail.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(MainDashboard, {\n    array: maindata,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), false && dashboard.dashboard.heading.map(function (i) {\n    return /*#__PURE__*/React.createElement(IonCard, {\n      key: i.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonCardHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, i.title), /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonGrid, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, i.data.map(function (item) {\n      return /*#__PURE__*/React.createElement(IonCol, {\n        key: item.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        sub: \"hello\",\n        img: \"https://ionicframework.com/docs/demos/api/card/madison.jpg\",\n        text: item.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }));\n    })))));\n  }), /*#__PURE__*/React.createElement(IonRefresher, {\n    slot: \"fixed\",\n    ref: ionRefresherRef,\n    onIonRefresh: doRefresh,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRefresherContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(IonToast, {\n    isOpen: showCompleteToast,\n    message: \"Refresh complete\",\n    duration: 2000,\n    onDidDismiss: function onDidDismiss() {\n      return setShowCompleteToast(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SessionList, {\n    schedule: favoritesSchedule,\n    listType: segment,\n    hide: segment === 'all',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: showFilterModal,\n    onDidDismiss: function onDidDismiss() {\n      return setShowFilterModal(false);\n    },\n    swipeToClose: true,\n    presentingElement: pageRef.current,\n    cssClass: \"session-list-filter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SessionListFilter, {\n    onDismissModal: function onDismissModal() {\n      return setShowFilterModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ShareSocialFab, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connect({\n  mapStateToProps: function mapStateToProps(state) {\n    return {\n      schedule: selectors.getSearchedSchedule(state),\n      favoritesSchedule: selectors.getGroupedFavorites(state),\n      mode: getConfig().get('mode')\n    };\n  },\n  mapDispatchToProps: {\n    setSearchText: setSearchText\n  },\n  component: React.memo(SchedulePage)\n});","map":{"version":3,"sources":["/home/fazna/cleanit/src/pages/Dashboard.tsx"],"names":["React","useState","useRef","dashboard","IonToolbar","IonContent","IonPage","IonButtons","IonTitle","IonMenuButton","IonSegment","IonSegmentButton","IonButton","IonIcon","IonSearchbar","IonRefresher","IonRefresherContent","IonToast","IonModal","IonHeader","getConfig","IonCard","IonCardHeader","IonGrid","IonRow","IonCol","IonCardContent","search","SessionList","SessionListFilter","ShareSocialFab","selectors","connect","setSearchText","Card","maindata","MainDashboard","SchedulePage","favoritesSchedule","schedule","mode","segment","setSegment","showSearchbar","setShowSearchbar","showFilterModal","setShowFilterModal","ionRefresherRef","showCompleteToast","setShowCompleteToast","pageRef","ios","doRefresh","setTimeout","current","complete","cardstyle","height","e","detail","value","heading","map","i","title","data","item","mapStateToProps","state","getSearchedSchedule","getGroupedFavorites","get","mapDispatchToProps","component","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {dashboard} from './dashboardData'\nimport { IonToolbar, IonContent, IonPage, IonButtons, IonTitle, IonMenuButton, IonSegment, IonSegmentButton, IonButton, IonIcon, IonSearchbar, IonRefresher, IonRefresherContent, IonToast, IonModal, IonHeader, getConfig, IonCard, IonCardHeader, IonGrid, IonRow, IonCol, IonCardContent } from '@ionic/react';\nimport { options, search } from 'ionicons/icons';\n\nimport SessionList from '../components/SessionList';\nimport SessionListFilter from '../components/SessionListFilter';\nimport './SchedulePage.scss'\nimport './Dashboard.scss'\nimport ShareSocialFab from '../components/ShareSocialFab';\n\nimport * as selectors from '../data/selectors';\nimport { connect } from '../data/connect';\nimport { setSearchText } from '../data/sessions/sessions.actions';\nimport { Schedule } from '../models/Schedule';\nimport { Card } from './Card';\nimport {maindata} from './maindata'\nimport {DashboardItems} from './DashboardItems'\nimport {MainDashboard} from './MainDashboard'\ninterface OwnProps { }\n\ninterface StateProps {\n  schedule: Schedule;\n  favoritesSchedule: Schedule;\n  mode: 'ios' | 'md'\n}\n\ninterface DispatchProps {\n  setSearchText: typeof setSearchText;\n}\n\ntype SchedulePageProps = OwnProps & StateProps & DispatchProps;\n\nconst SchedulePage: React.FC<SchedulePageProps> = ({ favoritesSchedule, schedule, setSearchText, mode }) => {\n  const [segment, setSegment] = useState<'all' | 'favorites'>('all');\n  const [showSearchbar, setShowSearchbar] = useState<boolean>(false);\n  const [showFilterModal, setShowFilterModal] = useState(false);\n  const ionRefresherRef = useRef<HTMLIonRefresherElement>(null);\n  const [showCompleteToast, setShowCompleteToast] = useState(false);\n\n  const pageRef = useRef<HTMLElement>(null);\n\n  const ios = mode === 'ios';\n\n  const doRefresh = () => {\n    setTimeout(() => {\n      ionRefresherRef.current!.complete();\n      setShowCompleteToast(true);\n    }, 2500)\n  };\nconst cardstyle = {\n    height:'50px'\n}\n  return (\n    <IonPage ref={pageRef} id=\"schedule-page\">\n      <IonHeader translucent={true}>\n        <IonToolbar>\n          {!showSearchbar &&\n            <IonButtons slot=\"start\">\n              <IonMenuButton />\n            </IonButtons>\n          }\n          {ios &&\n            <IonSegment value={segment} onIonChange={(e) => setSegment(e.detail.value as any)}>\n              <IonSegmentButton value=\"all\">\n                All\n              </IonSegmentButton>\n              <IonSegmentButton value=\"favorites\">\n                Favorites\n              </IonSegmentButton>\n            </IonSegment>\n          }\n          {!ios && !showSearchbar &&\n            <IonTitle>Dashboard</IonTitle>\n          }\n          {showSearchbar &&\n            <IonSearchbar showCancelButton=\"always\" placeholder=\"Search\" onIonChange={(e: CustomEvent) => setSearchText(e.detail.value)} onIonCancel={() => setShowSearchbar(false)}></IonSearchbar>\n          }\n\n          <IonButtons slot=\"end\">\n            {!ios && !showSearchbar &&\n              <IonButton onClick={() => setShowSearchbar(true)}>\n                <IonIcon slot=\"icon-only\" icon={search}></IonIcon>\n              </IonButton>\n            }\n           \n          </IonButtons>\n        </IonToolbar>\n\n\n       \n      </IonHeader>\n\n      <IonContent fullscreen={true}>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Schedule</IonTitle>\n          </IonToolbar>\n          <IonToolbar>\n            <IonSearchbar placeholder=\"Search\" onIonChange={(e: CustomEvent) => setSearchText(e.detail.value)}></IonSearchbar>\n          </IonToolbar>\n        </IonHeader>\n        {/* <IonGrid>      \n            {dashboard.dashboard.heading.map(i => \n            <div>\n            <IonRow> \n                <IonCol>\n                        <IonCard>\n                            <IonCardHeader>{i.title}</IonCardHeader>\n                        </IonCard>\n                </IonCol>\n                </IonRow>\n                \n                <IonRow>\n                    {i.data.map(item =>\n                        <IonCol size=\"4\">\n                            <IonCard key={item.title} style={cardstyle}>\n                                <IonCardHeader>\n                                    {item.title}\n                                </IonCardHeader>\n                            </IonCard>\n                        </IonCol>  \n                    )}\n                </IonRow>\n            </div>\n            )} \n        </IonGrid> */}\n        {/* <MainDashboar */}\n        {/* <DashboardItems prop={dashboard_data} /> */}\n        <MainDashboard array={maindata}/>\n        {/* <Card img='https://ionicframework.com/docs/demos/api/card/madison.jpg' text=\"Image Card\"/> */}\n        {false && dashboard.dashboard.heading.map(\n            i => \n            <IonCard key={i.title}>\n                <IonCardHeader>{i.title}</IonCardHeader>\n                <IonCardContent>\n                    <IonGrid>\n                        <IonRow>\n                        {i.data.map(item => \n                            <IonCol key={item.title}>\n                                {/* <IonIcon name=\"albums\"/>\n                                {item.title} */}\n                                <Card sub=\"hello\" img='https://ionicframework.com/docs/demos/api/card/madison.jpg' text={item.title}/>\n                            </IonCol>\n                            )}\n                        </IonRow>\n                    </IonGrid>\n                </IonCardContent>\n            </IonCard>\n        )}\n\n        <IonRefresher slot=\"fixed\" ref={ionRefresherRef} onIonRefresh={doRefresh}>\n          <IonRefresherContent />\n        </IonRefresher>\n\n        <IonToast\n          isOpen={showCompleteToast}\n          message=\"Refresh complete\"\n          duration={2000}\n          onDidDismiss={() => setShowCompleteToast(false)}\n        />\n\n        {/* <SessionList\n          schedule={schedule}\n          listType={segment}\n          hide={segment === 'favorites'}\n        /> */}\n        <SessionList\n          schedule={favoritesSchedule}\n          listType={segment}\n          hide={segment === 'all'}\n        />\n      </IonContent>\n\n      <IonModal\n        isOpen={showFilterModal}\n        onDidDismiss={() => setShowFilterModal(false)}\n        swipeToClose={true}\n        presentingElement={pageRef.current!}\n        cssClass=\"session-list-filter\"\n      >\n        <SessionListFilter\n          onDismissModal={() => setShowFilterModal(false)}\n        />\n      </IonModal>\n\n      <ShareSocialFab />\n\n    </IonPage>\n  );\n};\n\nexport default connect<OwnProps, StateProps, DispatchProps>({\n  mapStateToProps: (state) => ({\n    schedule: selectors.getSearchedSchedule(state),\n    favoritesSchedule: selectors.getGroupedFavorites(state),\n    mode: getConfig()!.get('mode')\n  }),\n  mapDispatchToProps: {\n    setSearchText\n  },\n  component: React.memo(SchedulePage)\n});"]},"metadata":{},"sourceType":"module"}