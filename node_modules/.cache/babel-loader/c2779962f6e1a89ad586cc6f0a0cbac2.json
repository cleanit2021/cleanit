{"ast":null,"code":"import _slicedToArray from\"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{IonModal,IonButton,IonContent}from'@ionic/react';import'./Modal.scss';export var Modal=function Modal(_ref){var openModal=_ref.openModal,text=_ref.text,closeModal=_ref.closeModal;var _useState=useState(openModal),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setShowModal=_useState2[1];useEffect(function(){return setShowModal(openModal);},[openModal]);return/*#__PURE__*/React.createElement(IonContent,null,/*#__PURE__*/React.createElement(IonModal,{isOpen:showModal,cssClass:\"my-custom-modal-css\"},/*#__PURE__*/React.createElement(\"p\",null,text),/*#__PURE__*/React.createElement(IonButton,{onClick:function onClick(){setShowModal(false);closeModal();}},\"OK\")));};","map":{"version":3,"sources":["/home/fazna/cleanit/src/pages/Modal.tsx"],"names":["React","useEffect","useState","IonModal","IonButton","IonContent","Modal","openModal","text","closeModal","showModal","setShowModal"],"mappings":"0IACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,UAA9B,KAAgD,cAAhD,CACA,MAAO,cAAP,CAOA,MAAO,IAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MAAiC,IAA/BC,CAAAA,SAA+B,MAA/BA,SAA+B,CAArBC,IAAqB,MAArBA,IAAqB,CAAhBC,UAAgB,MAAhBA,UAAgB,CAC1E,cAAkCP,QAAQ,CAACK,SAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACEV,SAAS,CAAC,iBACVU,CAAAA,YAAY,CAACJ,SAAD,CADF,EAAD,CAER,CAACA,SAAD,CAFQ,CAAT,CAGF,mBACE,oBAAC,UAAD,mBAEE,oBAAC,QAAD,EAAU,MAAM,CAAEG,SAAlB,CAA6B,QAAQ,CAAC,qBAAtC,eACE,6BAAIF,IAAJ,CADF,cAEE,oBAAC,SAAD,EAAW,OAAO,CAAE,kBAAM,CAACG,YAAY,CAAC,KAAD,CAAZ,CACCF,UAAU,GACb,CAFzB,OAFF,CAFF,CADF,CAaD,CAlBM","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { IonModal, IonButton, IonContent } from '@ionic/react';\nimport './Modal.scss'\ninterface ModalProps {\n    openModal : boolean,\n    text: string,\n    closeModal : Function\n  }\n\nexport const Modal: React.FC<ModalProps> = ({openModal,text,closeModal}) => {\n  const [showModal, setShowModal] = useState(openModal);\n    useEffect(()=>\n    setShowModal(openModal)\n    ,[openModal])\n  return (\n    <IonContent>\n       \n      <IonModal isOpen={showModal} cssClass='my-custom-modal-css'>\n        <p>{text}</p>\n        <IonButton onClick={() => {setShowModal(false)\n                                    closeModal()\n                                }\n        }>OK</IonButton>\n      </IonModal>\n      {/* <IonButton onClick={() => setShowModal(true)}>Show Modal</IonButton> */}\n    </IonContent>\n  );\n};"]},"metadata":{},"sourceType":"module"}