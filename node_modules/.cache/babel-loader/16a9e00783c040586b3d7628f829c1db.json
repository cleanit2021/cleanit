{"ast":null,"code":"import _regeneratorRuntime from\"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getConfData}from'../dataApi';export var loadConfData=function loadConfData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(setLoading(true));_context.next=3;return getConfData();case 3:data=_context.sent;dispatch(setData(data));dispatch(setLoading(false));case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var setLoading=function setLoading(isLoading){return{type:'set-conf-loading',isLoading:isLoading};};export var setData=function setData(data){return{type:'set-conf-data',data:data};};export var addFavorite=function addFavorite(sessionId){return{type:'add-favorite',sessionId:sessionId};};export var removeFavorite=function removeFavorite(sessionId){return{type:'remove-favorite',sessionId:sessionId};};export var updateFilteredTracks=function updateFilteredTracks(filteredTracks){return{type:'update-filtered-tracks',filteredTracks:filteredTracks};};export var setSearchText=function setSearchText(searchText){return{type:'set-search-text',searchText:searchText};};export var setMenuEnabled=function setMenuEnabled(menuEnabled){return{type:'set-menu-enabled',menuEnabled:menuEnabled};};","map":{"version":3,"sources":["/home/fazna/cleanit/src/data/sessions/sessions.actions.ts"],"names":["getConfData","loadConfData","dispatch","setLoading","data","setData","isLoading","type","addFavorite","sessionId","removeFavorite","updateFilteredTracks","filteredTracks","setSearchText","searchText","setMenuEnabled","menuEnabled"],"mappings":"iRAAA,OAASA,WAAT,KAA4B,YAA5B,CAIA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,kGAAM,iBAAOC,QAAP,2HAChCA,QAAQ,CAACC,UAAU,CAAC,IAAD,CAAX,CAAR,CADgC,sBAEbH,CAAAA,WAAW,EAFE,QAE1BI,IAF0B,eAGhCF,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR,CACAF,QAAQ,CAACC,UAAU,CAAC,KAAD,CAAX,CAAR,CAJgC,sDAAN,gEAArB,CAOP,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACG,SAAD,QAAyB,CACjDC,IAAI,CAAE,kBAD2C,CAEjDD,SAAS,CAATA,SAFiD,CAAzB,EAAnB,CAKP,MAAO,IAAMD,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACD,IAAD,QAA+B,CACpDG,IAAI,CAAE,eAD8C,CAEpDH,IAAI,CAAJA,IAFoD,CAA/B,EAAhB,CAKP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,SAAD,QAAwB,CACjDF,IAAI,CAAE,cAD2C,CAEjDE,SAAS,CAATA,SAFiD,CAAxB,EAApB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACD,SAAD,QAAwB,CACpDF,IAAI,CAAE,iBAD8C,CAEpDE,SAAS,CAATA,SAFoD,CAAxB,EAAvB,CAKP,MAAO,IAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,cAAD,QAA+B,CACjEL,IAAI,CAAE,wBAD2D,CAEjEK,cAAc,CAAdA,cAFiE,CAA/B,EAA7B,CAKP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,QAA0B,CACrDP,IAAI,CAAE,iBAD+C,CAErDO,UAAU,CAAVA,UAFqD,CAA1B,EAAtB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,WAAD,QAA2B,CACvDT,IAAI,CAAE,kBADiD,CAEvDS,WAAW,CAAXA,WAFuD,CAA3B,EAAvB","sourcesContent":["import { getConfData } from '../dataApi';\nimport { ActionType } from '../../util/types';\nimport { ConfState } from './conf.state';\n\nexport const loadConfData = () => async (dispatch: React.Dispatch<any>) => {\n  dispatch(setLoading(true));\n  const data = await getConfData();\n  dispatch(setData(data));\n  dispatch(setLoading(false));\n}\n\nexport const setLoading = (isLoading: boolean) => ({\n  type: 'set-conf-loading',\n  isLoading\n} as const);\n\nexport const setData = (data: Partial<ConfState>) => ({\n  type: 'set-conf-data',\n  data\n} as const);\n\nexport const addFavorite = (sessionId: number) => ({\n  type: 'add-favorite',\n  sessionId\n} as const);\n\nexport const removeFavorite = (sessionId: number) => ({\n  type: 'remove-favorite',\n  sessionId\n} as const);\n\nexport const updateFilteredTracks = (filteredTracks: string[]) => ({\n  type: 'update-filtered-tracks', \n  filteredTracks \n} as const);\n\nexport const setSearchText = (searchText?: string) => ({ \n  type: 'set-search-text', \n  searchText \n} as const);\n\nexport const setMenuEnabled = (menuEnabled: boolean) => ({ \n  type: 'set-menu-enabled', \n  menuEnabled\n} as const);\n\nexport type SessionsActions =\n  | ActionType<typeof setLoading>\n  | ActionType<typeof setData>\n  | ActionType<typeof addFavorite>\n  | ActionType<typeof removeFavorite>\n  | ActionType<typeof updateFilteredTracks>\n  | ActionType<typeof setSearchText>\n  | ActionType<typeof setMenuEnabled>\n"]},"metadata":{},"sourceType":"module"}