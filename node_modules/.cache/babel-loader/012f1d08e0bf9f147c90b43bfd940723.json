{"ast":null,"code":"import _slicedToArray from\"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import{IonToolbar,IonContent,IonPage,IonButtons,IonTitle,IonMenuButton,IonButton,IonSearchbar,IonRefresher,IonRefresherContent,IonToast,IonModal,IonHeader,getConfig}from'@ionic/react';import SessionList from'../components/SessionList';import SessionListFilter from'../components/SessionListFilter';// import './SelectFour.scss'\nimport'./Dashboard.scss';import ShareSocialFab from'../components/ShareSocialFab';import*as selectors from'../data/selectors';import{connect}from'../data/connect';import{setSearchText}from'../data/sessions/sessions.actions';var SelectFour=function SelectFour(_ref){var favoritesSchedule=_ref.favoritesSchedule,schedule=_ref.schedule,setSearchText=_ref.setSearchText,mode=_ref.mode;var _useState=useState('all'),_useState2=_slicedToArray(_useState,2),segment=_useState2[0],setSegment=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showSearchbar=_useState4[0],setShowSearchbar=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showFilterModal=_useState6[0],setShowFilterModal=_useState6[1];var ionRefresherRef=useRef(null);var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showCompleteToast=_useState8[0],setShowCompleteToast=_useState8[1];var array=['Hotel',\"Hospital\",\"Industry\",\"Household\"];var pageRef=useRef(null);var ios=mode==='ios';var sendData=function sendData(i){};var doRefresh=function doRefresh(){setTimeout(function(){ionRefresherRef.current.complete();setShowCompleteToast(true);},2500);};var cardstyle={height:'50px'};return/*#__PURE__*/React.createElement(IonPage,{ref:pageRef,id:\"schedule-page\"},/*#__PURE__*/React.createElement(IonHeader,{translucent:true},/*#__PURE__*/React.createElement(IonToolbar,null,!showSearchbar&&/*#__PURE__*/React.createElement(IonButtons,{slot:\"start\"},/*#__PURE__*/React.createElement(IonMenuButton,null)),/*#__PURE__*/React.createElement(IonTitle,null,\"Select one\"))),/*#__PURE__*/React.createElement(IonContent,{fullscreen:true},/*#__PURE__*/React.createElement(IonHeader,{collapse:\"condense\"},/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonTitle,{size:\"large\"},\"Schedule\")),/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonSearchbar,{placeholder:\"Search\",onIonChange:function onIonChange(e){return setSearchText(e.detail.value);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{margin:'30px'}},array.map(function(i){return/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'30px'}},/*#__PURE__*/React.createElement(IonButton,{onClick:function onClick(){},expand:\"full\"},i));})),/*#__PURE__*/React.createElement(IonRefresher,{slot:\"fixed\",ref:ionRefresherRef,onIonRefresh:doRefresh},/*#__PURE__*/React.createElement(IonRefresherContent,null)),/*#__PURE__*/React.createElement(IonToast,{isOpen:showCompleteToast,message:\"Refresh complete\",duration:2000,onDidDismiss:function onDidDismiss(){return setShowCompleteToast(false);}}),/*#__PURE__*/React.createElement(SessionList,{schedule:favoritesSchedule,listType:segment,hide:segment==='all'})),/*#__PURE__*/React.createElement(IonModal,{isOpen:showFilterModal,onDidDismiss:function onDidDismiss(){return setShowFilterModal(false);},swipeToClose:true,presentingElement:pageRef.current,cssClass:\"session-list-filter\"},/*#__PURE__*/React.createElement(SessionListFilter,{onDismissModal:function onDismissModal(){return setShowFilterModal(false);}})),/*#__PURE__*/React.createElement(ShareSocialFab,null));};export default connect({mapStateToProps:function mapStateToProps(state){return{schedule:selectors.getSearchedSchedule(state),favoritesSchedule:selectors.getGroupedFavorites(state),mode:getConfig().get('mode')};},mapDispatchToProps:{setSearchText:setSearchText},component:React.memo(SelectFour)});","map":{"version":3,"sources":["/home/fazna/cleanit/src/pages/SelectFour.tsx"],"names":["React","useState","useRef","IonToolbar","IonContent","IonPage","IonButtons","IonTitle","IonMenuButton","IonButton","IonSearchbar","IonRefresher","IonRefresherContent","IonToast","IonModal","IonHeader","getConfig","SessionList","SessionListFilter","ShareSocialFab","selectors","connect","setSearchText","SelectFour","favoritesSchedule","schedule","mode","segment","setSegment","showSearchbar","setShowSearchbar","showFilterModal","setShowFilterModal","ionRefresherRef","showCompleteToast","setShowCompleteToast","array","pageRef","ios","sendData","i","doRefresh","setTimeout","current","complete","cardstyle","height","e","detail","value","margin","map","marginTop","mapStateToProps","state","getSearchedSchedule","getGroupedFavorites","get","mapDispatchToProps","component","memo"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CAEA,OAASC,UAAT,CAAqBC,UAArB,CAAiCC,OAAjC,CAA0CC,UAA1C,CAAsDC,QAAtD,CAAgEC,aAAhE,CAA6GC,SAA7G,CAAiIC,YAAjI,CAA+IC,YAA/I,CAA6JC,mBAA7J,CAAkLC,QAAlL,CAA4LC,QAA5L,CAAsMC,SAAtM,CAAiNC,SAAjN,KAAmS,cAAnS,CAGA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,iCAA9B,CACA;AACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CAEA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,mBAA3B,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,aAAT,KAA8B,mCAA9B,CAiBA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAA0D,IAAvDC,CAAAA,iBAAuD,MAAvDA,iBAAuD,CAApCC,QAAoC,MAApCA,QAAoC,CAA1BH,aAA0B,MAA1BA,aAA0B,CAAXI,IAAW,MAAXA,IAAW,CACtG,cAA8BzB,QAAQ,CAAsB,KAAtB,CAAtC,wCAAO0B,OAAP,eAAgBC,UAAhB,eACA,eAA0C3B,QAAQ,CAAU,KAAV,CAAlD,yCAAO4B,aAAP,eAAsBC,gBAAtB,eACA,eAA8C7B,QAAQ,CAAC,KAAD,CAAtD,yCAAO8B,eAAP,eAAwBC,kBAAxB,eACA,GAAMC,CAAAA,eAAe,CAAG/B,MAAM,CAA0B,IAA1B,CAA9B,CACA,eAAkDD,QAAQ,CAAC,KAAD,CAA1D,yCAAOiC,iBAAP,eAA0BC,oBAA1B,eACA,GAAMC,CAAAA,KAAK,CAAG,CACZ,OADY,CACJ,UADI,CACO,UADP,CACkB,WADlB,CAAd,CAGA,GAAMC,CAAAA,OAAO,CAAGnC,MAAM,CAAc,IAAd,CAAtB,CAEA,GAAMoC,CAAAA,GAAG,CAAGZ,IAAI,GAAK,KAArB,CACF,GAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAW,CAE3B,CAFD,CAGE,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBC,UAAU,CAAC,UAAM,CACfT,eAAe,CAACU,OAAhB,CAAyBC,QAAzB,GACAT,oBAAoB,CAAC,IAAD,CAApB,CACD,CAHS,CAGP,IAHO,CAAV,CAID,CALD,CAMF,GAAMU,CAAAA,SAAS,CAAG,CACdC,MAAM,CAAC,MADO,CAAlB,CAGE,mBACE,oBAAC,OAAD,EAAS,GAAG,CAAET,OAAd,CAAuB,EAAE,CAAC,eAA1B,eACJ,oBAAC,SAAD,EAAW,WAAW,CAAE,IAAxB,eACQ,oBAAC,UAAD,MACG,CAACR,aAAD,eACC,oBAAC,UAAD,EAAY,IAAI,CAAC,OAAjB,eACE,oBAAC,aAAD,MADF,CAFJ,cAME,oBAAC,QAAD,mBANF,CADR,CADI,cAWE,oBAAC,UAAD,EAAY,UAAU,CAAE,IAAxB,eACE,oBAAC,SAAD,EAAW,QAAQ,CAAC,UAApB,eACE,oBAAC,UAAD,mBACE,oBAAC,QAAD,EAAU,IAAI,CAAC,OAAf,aADF,CADF,cAIE,oBAAC,UAAD,mBACE,oBAAC,YAAD,EAAc,WAAW,CAAC,QAA1B,CAAmC,WAAW,CAAE,qBAACkB,CAAD,QAAoBzB,CAAAA,aAAa,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC,EAAhD,EADF,CAJF,CADF,cAUA,2BAAK,KAAK,CAAE,CAACC,MAAM,CAAC,MAAR,CAAZ,EACCd,KAAK,CAACe,GAAN,CAAU,SAAAX,CAAC,qBACZ,2BAAK,KAAK,CAAE,CAACY,SAAS,CAAC,MAAX,CAAZ,eACU,oBAAC,SAAD,EAAW,OAAO,CAAE,kBAAI,CAAE,CAA1B,CAA4B,MAAM,CAAC,MAAnC,EAA2CZ,CAA3C,CADV,CADY,EAAX,CADD,CAVA,cAiBE,oBAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,CAA2B,GAAG,CAAEP,eAAhC,CAAiD,YAAY,CAAEQ,SAA/D,eACE,oBAAC,mBAAD,MADF,CAjBF,cAqBE,oBAAC,QAAD,EACE,MAAM,CAAEP,iBADV,CAEE,OAAO,CAAC,kBAFV,CAGE,QAAQ,CAAE,IAHZ,CAIE,YAAY,CAAE,8BAAMC,CAAAA,oBAAoB,CAAC,KAAD,CAA1B,EAJhB,EArBF,cAiCE,oBAAC,WAAD,EACE,QAAQ,CAAEX,iBADZ,CAEE,QAAQ,CAAEG,OAFZ,CAGE,IAAI,CAAEA,OAAO,GAAK,KAHpB,EAjCF,CAXF,cAmDE,oBAAC,QAAD,EACE,MAAM,CAAEI,eADV,CAEE,YAAY,CAAE,8BAAMC,CAAAA,kBAAkB,CAAC,KAAD,CAAxB,EAFhB,CAGE,YAAY,CAAE,IAHhB,CAIE,iBAAiB,CAAEK,OAAO,CAACM,OAJ7B,CAKE,QAAQ,CAAC,qBALX,eAOE,oBAAC,iBAAD,EACE,cAAc,CAAE,gCAAMX,CAAAA,kBAAkB,CAAC,KAAD,CAAxB,EADlB,EAPF,CAnDF,cA+DE,oBAAC,cAAD,MA/DF,CADF,CAoED,CA5FD,CA8FA,cAAeX,CAAAA,OAAO,CAAsC,CAC1DgC,eAAe,CAAE,yBAACC,KAAD,QAAY,CAC3B7B,QAAQ,CAAEL,SAAS,CAACmC,mBAAV,CAA8BD,KAA9B,CADiB,CAE3B9B,iBAAiB,CAAEJ,SAAS,CAACoC,mBAAV,CAA8BF,KAA9B,CAFQ,CAG3B5B,IAAI,CAAEV,SAAS,GAAIyC,GAAb,CAAiB,MAAjB,CAHqB,CAAZ,EADyC,CAM1DC,kBAAkB,CAAE,CAClBpC,aAAa,CAAbA,aADkB,CANsC,CAS1DqC,SAAS,CAAE3D,KAAK,CAAC4D,IAAN,CAAWrC,UAAX,CAT+C,CAAtC,CAAtB","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {dashboard} from './dashboardData'\nimport { IonToolbar, IonContent, IonPage, IonButtons, IonTitle, IonMenuButton, IonSegment, IonSegmentButton, IonButton, IonIcon, IonSearchbar, IonRefresher, IonRefresherContent, IonToast, IonModal, IonHeader, getConfig, IonCard, IonCardHeader, IonGrid, IonRow, IonCol, IonCardContent } from '@ionic/react';\nimport { options, search } from 'ionicons/icons';\n\nimport SessionList from '../components/SessionList';\nimport SessionListFilter from '../components/SessionListFilter';\n// import './SelectFour.scss'\nimport './Dashboard.scss'\nimport ShareSocialFab from '../components/ShareSocialFab';\n\nimport * as selectors from '../data/selectors';\nimport { connect } from '../data/connect';\nimport { setSearchText } from '../data/sessions/sessions.actions';\nimport { Schedule } from '../models/Schedule';\n\ninterface OwnProps { }\n\ninterface StateProps {\n  schedule: Schedule;\n  favoritesSchedule: Schedule;\n  mode: 'ios' | 'md'\n}\n\ninterface DispatchProps {\n  setSearchText: typeof setSearchText;\n}\n\ntype SelectFourProps = OwnProps & StateProps & DispatchProps;\n\nconst SelectFour: React.FC<SelectFourProps> = ({ favoritesSchedule, schedule, setSearchText, mode }) => {\n  const [segment, setSegment] = useState<'all' | 'favorites'>('all');\n  const [showSearchbar, setShowSearchbar] = useState<boolean>(false);\n  const [showFilterModal, setShowFilterModal] = useState(false);\n  const ionRefresherRef = useRef<HTMLIonRefresherElement>(null);\n  const [showCompleteToast, setShowCompleteToast] = useState(false);\n  const array = [\n    'Hotel',\"Hospital\",\"Industry\",\"Household\"\n  ]\n  const pageRef = useRef<HTMLElement>(null);\n\n  const ios = mode === 'ios';\nconst sendData = (i:any) => {\n  \n}\n  const doRefresh = () => {\n    setTimeout(() => {\n      ionRefresherRef.current!.complete();\n      setShowCompleteToast(true);\n    }, 2500)\n  };\nconst cardstyle = {\n    height:'50px'\n}\n  return (\n    <IonPage ref={pageRef} id=\"schedule-page\">\n<IonHeader translucent={true}>\n        <IonToolbar>\n          {!showSearchbar &&\n            <IonButtons slot=\"start\">\n              <IonMenuButton />\n            </IonButtons>\n          }\n          <IonTitle>Select one</IonTitle>\n          </IonToolbar>\n          </IonHeader>\n      <IonContent fullscreen={true}>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">Schedule</IonTitle>\n          </IonToolbar>\n          <IonToolbar>\n            <IonSearchbar placeholder=\"Search\" onIonChange={(e: CustomEvent) => setSearchText(e.detail.value)}></IonSearchbar>\n          </IonToolbar>\n        </IonHeader>\n      \n      <div style={{margin:'30px'}}>\n      {array.map(i=>\n      <div style={{marginTop:'30px'}}>\n                <IonButton onClick={()=>{}} expand=\"full\">{i}</IonButton>\n                </div>)}\n      </div>\n              \n        <IonRefresher slot=\"fixed\" ref={ionRefresherRef} onIonRefresh={doRefresh}>\n          <IonRefresherContent />\n        </IonRefresher>\n\n        <IonToast\n          isOpen={showCompleteToast}\n          message=\"Refresh complete\"\n          duration={2000}\n          onDidDismiss={() => setShowCompleteToast(false)}\n        />\n\n        {/* <SessionList\n          schedule={schedule}\n          listType={segment}\n          hide={segment === 'favorites'}\n        /> */}\n        <SessionList\n          schedule={favoritesSchedule}\n          listType={segment}\n          hide={segment === 'all'}\n        />\n      </IonContent>\n\n      <IonModal\n        isOpen={showFilterModal}\n        onDidDismiss={() => setShowFilterModal(false)}\n        swipeToClose={true}\n        presentingElement={pageRef.current!}\n        cssClass=\"session-list-filter\"\n      >\n        <SessionListFilter\n          onDismissModal={() => setShowFilterModal(false)}\n        />\n      </IonModal>\n\n      <ShareSocialFab />\n\n    </IonPage>\n  );\n};\n\nexport default connect<OwnProps, StateProps, DispatchProps>({\n  mapStateToProps: (state) => ({\n    schedule: selectors.getSearchedSchedule(state),\n    favoritesSchedule: selectors.getGroupedFavorites(state),\n    mode: getConfig()!.get('mode')\n  }),\n  mapDispatchToProps: {\n    setSearchText\n  },\n  component: React.memo(SelectFour)\n});"]},"metadata":{},"sourceType":"module"}