{"ast":null,"code":"import _regeneratorRuntime from \"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useContext } from 'react';\nimport { IonRouterContext } from '@ionic/react';\nimport { Plugins } from '@capacitor/core';\n// import { Storage } from '@capacitor/storage';\nvar Storage = Plugins.Storage;\n\nvar RedirectToLogin = function RedirectToLogin(_ref) {\n  var setIsLoggedIn = _ref.setIsLoggedIn,\n      setUsername = _ref.setUsername;\n  var ionRouterContext = useContext(IonRouterContext);\n\n  var removeName = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Storage.remove({\n                key: 'phonenumber'\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function removeName() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setIsLoggedIn(false);\n    setUsername(undefined);\n    removeName();\n    ionRouterContext.push('/signup');\n  }, [setIsLoggedIn, setUsername, ionRouterContext]);\n  return null;\n};\n\nexport default RedirectToLogin;","map":{"version":3,"sources":["/home/fazna/cleanit/src/components/RedirectToLogin.tsx"],"names":["useEffect","useContext","IonRouterContext","Plugins","Storage","RedirectToLogin","setIsLoggedIn","setUsername","ionRouterContext","removeName","remove","key","undefined","push"],"mappings":";;AAAA,SAAgBA,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAMA;AACA,IAAQC,OAAR,GAAoBD,OAApB,CAAQC,OAAR;;AACA,IAAMC,eAA+C,GAAG,SAAlDA,eAAkD,OAAoC;AAAA,MAAjCC,aAAiC,QAAjCA,aAAiC;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AAC1F,MAAMC,gBAAgB,GAAGP,UAAU,CAACC,gBAAD,CAAnC;;AAEA,MAAMO,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXL,OAAO,CAACM,MAAR,CAAe;AAAEC,gBAAAA,GAAG,EAAE;AAAP,eAAf,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVF,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAGAT,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,IAAAA,WAAW,CAACK,SAAD,CAAX;AACAH,IAAAA,UAAU;AACVD,IAAAA,gBAAgB,CAACK,IAAjB,CAAsB,SAAtB;AACD,GALQ,EAKN,CAACP,aAAD,EAAgBC,WAAhB,EAA6BC,gBAA7B,CALM,CAAT;AAMA,SAAO,IAAP;AACD,CAbD;;AAeA,eAAeH,eAAf","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { IonRouterContext } from '@ionic/react';\nimport { Plugins } from '@capacitor/core'\n\ninterface RedirectToLoginProps {\n  setIsLoggedIn: Function;\n  setUsername: Function;\n}\n// import { Storage } from '@capacitor/storage';\nconst { Storage } = Plugins\nconst RedirectToLogin: React.FC<RedirectToLoginProps> = ({ setIsLoggedIn, setUsername }) => {\n  const ionRouterContext = useContext(IonRouterContext);\n\n  const removeName = async () => {\n    await Storage.remove({ key: 'phonenumber' });\n  };\n  useEffect(() => {\n    setIsLoggedIn(false);\n    setUsername(undefined);\n    removeName();\n    ionRouterContext.push('/signup')\n  }, [setIsLoggedIn, setUsername, ionRouterContext]);\n  return null;\n};\n\nexport default RedirectToLogin;\n"]},"metadata":{},"sourceType":"module"}