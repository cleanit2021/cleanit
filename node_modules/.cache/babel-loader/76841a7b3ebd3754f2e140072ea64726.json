{"ast":null,"code":"import React,{useContext,useMemo}from'react';import{AppContext}from'./AppContext';;export function connect(_ref){var _ref$mapStateToProps=_ref.mapStateToProps,mapStateToProps=_ref$mapStateToProps===void 0?function(){return{};}:_ref$mapStateToProps,_ref$mapDispatchToPro=_ref.mapDispatchToProps,mapDispatchToProps=_ref$mapDispatchToPro===void 0?{}:_ref$mapDispatchToPro,component=_ref.component;var Connect=function Connect(ownProps){var context=useContext(AppContext);var dispatchFuncs=useMemo(function(){var dispatchFuncs={};Object.keys(mapDispatchToProps).forEach(function(key){var oldFunc=mapDispatchToProps[key];var newFunc=function newFunc(){var dispatchFunc=oldFunc.apply(void 0,arguments);if(typeof dispatchFunc==='object'){context.dispatch(dispatchFunc);}else{var result=dispatchFunc(context.dispatch);if(typeof result==='object'&&result.then){result.then(function(dispatchObject){if(dispatchObject&&dispatchObject.type){context.dispatch(dispatchObject);}});}}};dispatchFuncs[key]=newFunc;});return dispatchFuncs;// eslint-disable-next-line\n},[mapDispatchToProps]);var props=useMemo(function(){return Object.assign({},ownProps,mapStateToProps(context.state,ownProps),dispatchFuncs);// eslint-disable-next-line\n},[ownProps,context.state]);return React.createElement(component,props);};return React.memo(Connect);}","map":{"version":3,"sources":["/home/fazna/cleanit/src/data/connect.tsx"],"names":["React","useContext","useMemo","AppContext","connect","mapStateToProps","mapDispatchToProps","component","Connect","ownProps","context","dispatchFuncs","Object","keys","forEach","key","oldFunc","newFunc","dispatchFunc","dispatch","result","then","dispatchObject","type","props","assign","state","createElement","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,OAA5B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,cAA3B,CAQC,CAED,MAAO,SAASC,CAAAA,OAAT,MAA6Q,+BAAhMC,eAAgM,CAAhMA,eAAgM,+BAA9K,iBAAO,EAAP,EAA8K,iDAAnJC,kBAAmJ,CAAnJA,kBAAmJ,gCAA9H,EAA8H,uBAAxGC,SAAwG,MAAxGA,SAAwG,CAElR,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAyB,CACvC,GAAMC,CAAAA,OAAO,CAAGT,UAAU,CAACE,UAAD,CAA1B,CAEA,GAAMQ,CAAAA,aAAa,CAAGT,OAAO,CAAC,UAAM,CAClC,GAAMS,CAAAA,aAAqC,CAAG,EAA9C,CACAC,MAAM,CAACC,IAAP,CAAYP,kBAAZ,EAAgCQ,OAAhC,CAAwC,SAACC,GAAD,CAAS,CAC/C,GAAMC,CAAAA,OAAO,CAAIV,kBAAD,CAA4BS,GAA5B,CAAhB,CACA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkB,CAChC,GAAMC,CAAAA,YAAY,CAAGF,OAAO,MAAP,kBAArB,CACA,GAAI,MAAOE,CAAAA,YAAP,GAAwB,QAA5B,CAAsC,CACpCR,OAAO,CAACS,QAAR,CAAiBD,YAAjB,EACD,CAFD,IAEO,CACL,GAAME,CAAAA,MAAM,CAAGF,YAAY,CAACR,OAAO,CAACS,QAAT,CAA3B,CACA,GAAI,MAAOC,CAAAA,MAAP,GAAkB,QAAlB,EAA8BA,MAAM,CAACC,IAAzC,CAA+C,CAC7CD,MAAM,CAACC,IAAP,CAAY,SAACC,cAAD,CAAqC,CAC/C,GAAIA,cAAc,EAAIA,cAAc,CAACC,IAArC,CAA2C,CACzCb,OAAO,CAACS,QAAR,CAAiBG,cAAjB,EACD,CACF,CAJD,EAKD,CACF,CACF,CAdD,CAeAX,aAAa,CAACI,GAAD,CAAb,CAAqBE,OAArB,CACD,CAlBD,EAmBA,MAAON,CAAAA,aAAP,CACA;AACD,CAvB4B,CAuB1B,CAACL,kBAAD,CAvB0B,CAA7B,CA0BA,GAAMkB,CAAAA,KAAK,CAAGtB,OAAO,CAAC,UAAM,CAC1B,MAAOU,CAAAA,MAAM,CAACa,MAAP,CAAc,EAAd,CAAkBhB,QAAlB,CAA4BJ,eAAe,CAACK,OAAO,CAACgB,KAAT,CAAgBjB,QAAhB,CAA3C,CAAsEE,aAAtE,CAAP,CACA;AACD,CAHoB,CAGlB,CAACF,QAAD,CAAWC,OAAO,CAACgB,KAAnB,CAHkB,CAArB,CAKA,MAAO1B,CAAAA,KAAK,CAAC2B,aAAN,CAA+BpB,SAA/B,CAA0CiB,KAA1C,CAAP,CACD,CAnCD,CAoCA,MAAOxB,CAAAA,KAAK,CAAC4B,IAAN,CAAWpB,OAAX,CAAP,CACD","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { AppContext } from './AppContext';\nimport { DispatchObject } from '../util/types';\nimport { AppState } from './state';\n\ninterface ConnectParams<TOwnProps, TStateProps, TDispatchProps> {\n  mapStateToProps?: (state: AppState, props: TOwnProps) => TStateProps,\n  mapDispatchToProps?: TDispatchProps,\n  component: React.ComponentType<any>\n};\n\nexport function connect<TOwnProps = any, TStateProps = any, TDispatchProps = any>({ mapStateToProps = () => ({} as TStateProps), mapDispatchToProps = {} as TDispatchProps, component }: ConnectParams<TOwnProps, TStateProps, TDispatchProps>): React.FunctionComponent<TOwnProps> {\n\n  const Connect = (ownProps: TOwnProps) => {\n    const context = useContext(AppContext);\n\n    const dispatchFuncs = useMemo(() => {\n      const dispatchFuncs: { [key: string]: any } = {};\n      Object.keys(mapDispatchToProps).forEach((key) => {\n        const oldFunc = (mapDispatchToProps as any)[key];\n        const newFunc = (...args: any) => {\n          const dispatchFunc = oldFunc(...args);\n          if (typeof dispatchFunc === 'object') {\n            context.dispatch(dispatchFunc);\n          } else {\n            const result = dispatchFunc(context.dispatch)\n            if (typeof result === 'object' && result.then) {\n              result.then((dispatchObject?: DispatchObject) => {\n                if (dispatchObject && dispatchObject.type) {\n                  context.dispatch(dispatchObject);\n                }\n              })\n            }\n          }\n        }\n        dispatchFuncs[key] = newFunc\n      });\n      return dispatchFuncs;\n      // eslint-disable-next-line\n    }, [mapDispatchToProps])\n\n\n    const props = useMemo(() => {\n      return Object.assign({}, ownProps, mapStateToProps(context.state, ownProps), dispatchFuncs);\n      // eslint-disable-next-line\n    }, [ownProps, context.state]);\n\n    return React.createElement<TOwnProps>(component, props);\n  }\n  return React.memo(Connect as any);\n}\n"]},"metadata":{},"sourceType":"module"}