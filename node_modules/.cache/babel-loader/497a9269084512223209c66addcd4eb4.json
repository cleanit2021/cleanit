{"ast":null,"code":"import React from'react';var Map=function Map(_ref){var mapCenter=_ref.mapCenter,locations=_ref.locations;// const mapEle = useRef<HTMLDivElement>(null);\n// const map = useRef<google.maps.Map>();\n// useEffect(() => {\n//   map.current = new google.maps.Map(mapEle.current, {\n//     center: {\n//       lat: mapCenter.lat,\n//       lng: mapCenter.lng\n//     },\n//     zoom: 16\n//   });\n//   addMarkers();\n//   google.maps.event.addListenerOnce(map.current, 'idle', () => {\n//     if (mapEle.current) {\n//       mapEle.current.classList.add('show-map');\n//     }\n//   });\n//   function addMarkers() {\n//     locations.forEach((markerData) => {\n//       let infoWindow = new google.maps.InfoWindow({\n//         content: `<h5>${markerData.name}</h5>`\n//       });\n//       let marker = new google.maps.Marker({\n//         position: new google.maps.LatLng(markerData.lat, markerData.lng),\n//         map: map.current!,\n//         title: markerData.name\n//       });\n//       marker.addListener('click', () => {\n//         infoWindow.open(map.current!, marker);\n//       });\n//     });\n//   }\n// }, [mapCenter, locations]);\nreturn/*#__PURE__*/React.createElement(\"div\",{// ref={mapEle}\nclassName:\"map-canvas\"});};export default Map;","map":{"version":3,"sources":["/home/fazna/cleanit/src/components/Map.tsx"],"names":["React","Map","mapCenter","locations"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAyC,OAAzC,CAQA,GAAMC,CAAAA,GAAuB,CAAG,QAA1BA,CAAAA,GAA0B,MAA8B,IAA3BC,CAAAA,SAA2B,MAA3BA,SAA2B,CAAhBC,SAAgB,MAAhBA,SAAgB,CAC5D;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,mBACE,2BACA;AACC,SAAS,CAAC,YAFX,EADF,CAKD,CA/CD,CAiDA,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Location } from '../models/Location';\n\ninterface MapProps {\n  locations: Location[]\n  mapCenter: Location\n}\n\nconst Map: React.FC<MapProps> = ({ mapCenter, locations }) => {\n  // const mapEle = useRef<HTMLDivElement>(null);\n  // const map = useRef<google.maps.Map>();\n\n  // useEffect(() => {\n\n  //   map.current = new google.maps.Map(mapEle.current, {\n  //     center: {\n  //       lat: mapCenter.lat,\n  //       lng: mapCenter.lng\n  //     },\n  //     zoom: 16\n  //   });\n\n  //   addMarkers();\n\n  //   google.maps.event.addListenerOnce(map.current, 'idle', () => {\n  //     if (mapEle.current) {\n  //       mapEle.current.classList.add('show-map');\n  //     }\n  //   });\n\n  //   function addMarkers() {\n  //     locations.forEach((markerData) => {\n  //       let infoWindow = new google.maps.InfoWindow({\n  //         content: `<h5>${markerData.name}</h5>`\n  //       });\n  \n  //       let marker = new google.maps.Marker({\n  //         position: new google.maps.LatLng(markerData.lat, markerData.lng),\n  //         map: map.current!,\n  //         title: markerData.name\n  //       });\n  \n  //       marker.addListener('click', () => {\n  //         infoWindow.open(map.current!, marker);\n  //       });\n  //     });\n  //   }\n\n  // }, [mapCenter, locations]);\n\n  return (\n    <div \n    // ref={mapEle}\n     className=\"map-canvas\"></div>\n  );\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}