{"ast":null,"code":"import _regeneratorRuntime from \"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/fazna/cleanit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Plugins } from '@capacitor/core';\nvar Storage = Plugins.Storage;\nvar dataUrl = '/assets/data/data.json';\nvar locationsUrl = '/assets/data/locations.json';\nvar HAS_LOGGED_IN = 'hasLoggedIn';\nvar HAS_SEEN_TUTORIAL = 'hasSeenTutorial';\nvar USERNAME = 'username';\nexport var getConfData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, responseData, schedule, sessions, speakers, locations, allTracks, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Promise.all([fetch(dataUrl), fetch(locationsUrl)]);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response[0].json();\n\n          case 5:\n            responseData = _context.sent;\n            schedule = responseData.schedule[0];\n            sessions = parseSessions(schedule);\n            speakers = responseData.speakers;\n            _context.next = 11;\n            return response[1].json();\n\n          case 11:\n            locations = _context.sent;\n            allTracks = sessions.reduce(function (all, session) {\n              return all.concat(session.tracks);\n            }, []).filter(function (trackName, index, array) {\n              return array.indexOf(trackName) === index;\n            }).sort();\n            data = {\n              schedule: schedule,\n              sessions: sessions,\n              locations: locations,\n              speakers: speakers,\n              allTracks: allTracks,\n              filteredTracks: _toConsumableArray(allTracks)\n            };\n            return _context.abrupt(\"return\", data);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getConfData() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getUserData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response, isLoggedin, hasSeenTutorial, username, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Promise.all([Storage.get({\n              key: HAS_LOGGED_IN\n            }), Storage.get({\n              key: HAS_SEEN_TUTORIAL\n            }), Storage.get({\n              key: USERNAME\n            })]);\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response[0].value;\n\n          case 5:\n            _context2.t0 = _context2.sent;\n            isLoggedin = _context2.t0 === 'true';\n            _context2.next = 9;\n            return response[1].value;\n\n          case 9:\n            _context2.t1 = _context2.sent;\n            hasSeenTutorial = _context2.t1 === 'true';\n            _context2.next = 13;\n            return response[2].value;\n\n          case 13:\n            _context2.t2 = _context2.sent;\n\n            if (_context2.t2) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.t2 = undefined;\n\n          case 16:\n            username = _context2.t2;\n            data = {\n              isLoggedin: isLoggedin,\n              hasSeenTutorial: hasSeenTutorial,\n              username: username\n            };\n            return _context2.abrupt(\"return\", data);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getUserData() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var setIsLoggedInData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(isLoggedIn) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Storage.set({\n              key: HAS_LOGGED_IN,\n              value: JSON.stringify(isLoggedIn)\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function setIsLoggedInData(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var setHasSeenTutorialData = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(hasSeenTutorial) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Storage.set({\n              key: HAS_SEEN_TUTORIAL,\n              value: JSON.stringify(hasSeenTutorial)\n            });\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function setHasSeenTutorialData(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var setUsernameData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(username) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (username) {\n              _context5.next = 5;\n              break;\n            }\n\n            _context5.next = 3;\n            return Storage.remove({\n              key: USERNAME\n            });\n\n          case 3:\n            _context5.next = 7;\n            break;\n\n          case 5:\n            _context5.next = 7;\n            return Storage.set({\n              key: USERNAME,\n              value: username\n            });\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function setUsernameData(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction parseSessions(schedule) {\n  var sessions = [];\n  schedule.groups.forEach(function (g) {\n    g.sessions.forEach(function (s) {\n      return sessions.push(s);\n    });\n  });\n  return sessions;\n}","map":{"version":3,"sources":["/home/fazna/cleanit/src/data/dataApi.ts"],"names":["Plugins","Storage","dataUrl","locationsUrl","HAS_LOGGED_IN","HAS_SEEN_TUTORIAL","USERNAME","getConfData","Promise","all","fetch","response","json","responseData","schedule","sessions","parseSessions","speakers","locations","allTracks","reduce","session","concat","tracks","filter","trackName","index","array","indexOf","sort","data","filteredTracks","getUserData","get","key","value","isLoggedin","hasSeenTutorial","undefined","username","setIsLoggedInData","isLoggedIn","set","JSON","stringify","setHasSeenTutorialData","setUsernameData","remove","groups","forEach","g","s","push"],"mappings":"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","sourcesContent":["import { Plugins } from '@capacitor/core';\nimport { Schedule, Session } from '../models/Schedule';\nimport { Speaker } from '../models/Speaker';\nimport { Location } from '../models/Location';\n\nconst { Storage } = Plugins;\nconst dataUrl = '/assets/data/data.json';\nconst locationsUrl = '/assets/data/locations.json';\n\nconst HAS_LOGGED_IN = 'hasLoggedIn';\nconst HAS_SEEN_TUTORIAL = 'hasSeenTutorial';\nconst USERNAME = 'username';\n\nexport const getConfData = async () => {\n  const response = await Promise.all([\n    fetch(dataUrl),\n    fetch(locationsUrl)]);\n  const responseData = await response[0].json();\n  const schedule = responseData.schedule[0] as Schedule;\n  const sessions = parseSessions(schedule);\n  const speakers = responseData.speakers as Speaker[];\n  const locations = await response[1].json() as Location[];\n  const allTracks = sessions\n    .reduce((all, session) => all.concat(session.tracks), [] as string[])\n    .filter((trackName, index, array) => array.indexOf(trackName) === index)\n    .sort();\n\n  const data = {\n    schedule,\n    sessions,\n    locations,\n    speakers,\n    allTracks,\n    filteredTracks: [...allTracks]\n  }\n  return data;\n}\n\nexport const getUserData = async () => {\n  const response = await Promise.all([\n    Storage.get({ key: HAS_LOGGED_IN }),\n    Storage.get({ key: HAS_SEEN_TUTORIAL }),\n    Storage.get({ key: USERNAME })]);\n  const isLoggedin = await response[0].value === 'true';\n  const hasSeenTutorial = await response[1].value === 'true';\n  const username = await response[2].value || undefined;\n  const data = {\n    isLoggedin,\n    hasSeenTutorial,\n    username\n  }\n  return data;\n}\n\nexport const setIsLoggedInData = async (isLoggedIn: boolean) => {\n  await Storage.set({ key: HAS_LOGGED_IN, value: JSON.stringify(isLoggedIn) });\n}\n\nexport const setHasSeenTutorialData = async (hasSeenTutorial: boolean) => {\n  await Storage.set({ key: HAS_SEEN_TUTORIAL, value: JSON.stringify(hasSeenTutorial) });\n}\n\nexport const setUsernameData = async (username?: string) => {\n  if (!username) {\n    await Storage.remove({ key: USERNAME });\n  } else {\n    await Storage.set({ key: USERNAME, value: username });\n  }\n}\n\nfunction parseSessions(schedule: Schedule) {\n  const sessions: Session[] = [];\n  schedule.groups.forEach(g => {\n    g.sessions.forEach(s => sessions.push(s))\n  });\n  return sessions;\n}\n"]},"metadata":{},"sourceType":"module"}